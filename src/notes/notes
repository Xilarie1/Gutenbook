src/
│── components/
│   ├── Header.jsx         // Search bar + menu links (always visible)
│   ├── BookList.jsx       // Displays a list of books
│   ├── BookCard.jsx       // Displays a single book in the list
│
│── pages/
│   ├── Home.jsx           // Search results (default page with search functionality)
│   ├── Category.jsx       // Shows books for a specific category
│   ├── Favorites.jsx      // Shows books saved in localStorage
│   ├── BookDetails.jsx    // Shows details for a single book
│
│── App.jsx                // Sets up routing + layout
│── main.jsx               // React entry point
│── api.js                 // Helper for fetching from Gutendex API
│── styles.css             // Global styling (or Tailwind if you prefer)

Page component (Home / Category)

Handles fetching books from the API, including which page number you want.

Keeps track of current page in React state (useState).

BookList.jsx

Displays the books passed down as props.

Optionally also displays pagination controls (but often pagination buttons live in the page component too, since they need to trigger fetching).


Applikasjonen skal ha en header med et søkefelt hvor brukere kan søke etter spesifikke boktitler.
Søkeresultatene skal vises som en liste, og du skal implementere paginering ved hjelp av API-ets innebygde funksjonalitet for å bla gjennom resultatene.

Når brukeren klikker på en kategori, skal applikasjonen gjøre et API-kall til /books?topic=kategori og vise bøkene som tilhører denne kategorien. Menyen kan gjerne plasseres i headeren for enkel tilgang.

Fiction
Mystery
Thriller
Romance
Fantasy
Morality
Society
Power
Justice
Adventure
Tragedy
War
Philosophy

Applikasjonen skal ha en funksjon for å lagre favorittbøker. Dette må være tilgjengelig via en egen lenke i menyen/headeren.
Favorittbøker skal lagres i localStorage slik at de forblir tilgjengelige selv om siden oppdateres.
Når brukeren klikker på "Favoritter", skal en liste over favorittbøkene vises.

Ved å klikke på en bok fra søkeresultatene eller kategorioversikten, skal brukeren tas til en detaljside som viser informasjon om den valgte boken.
Informasjonen på detaljsiden skal inkludere:
Boktittel
Coverbilde
Forfatter
Antall nedlastninger
Kategori
Språk
Lenke til boka i digitalt format
En knapp for "Legg til i Favoritter"

Routing

Bruk createBrowserRouter fra react-router-dom for å sette opp routing i applikasjonen.
Kategorilinker og individuelle bøker skal bruke dynamiske lenker.
Header/meny skal alltid være synlig, uansett hvilken side brukeren er på.
State-håndtering

Bruk Reacts state til å håndtere applikasjonsdata, som søkeresultater, kategoribøker og favoritter.
Implementer visning av loading-status og feilmeldinger dersom API-kall tar tid eller mislykkes.
Styling

Du kan bruke hvilken som helst tilnærming til CSS (global CSS, CSS-moduler, eller tredjeparts stylingbiblioteker som Styled Components eller Material-UI).
Applikasjonen skal være responsiv, og tilpasse seg ulike skjermstørrelser.
API-dokumentasjon

Bruk dokumentasjonen til Gutendex APILinks to an external site. for å forstå hvordan du henter data.


tanstack query
axios

